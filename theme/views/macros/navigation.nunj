{% import "macros/status.nunj" as status %}

{% macro tree(root, current, request) %}

<h3 class="h3">{{ root.label }}</h3>
<div class="border border-grey-lightest rounded overflow-hidden mb-6 mt-4" data-behaviour="tree" id="tree-{{ root.name }}">
    <ul class="list-reset">
        {{ leaves(root.filter('isHidden', false).items(), root, current, 2, request) }}
    </ul>
</div>
{% endmacro %}

{% macro leaves(items, root, current, depth, request) %}
    {% for item in items %}
        {% if item.isCollection or (item.isComponent and not item.isCollated and item.variants().filter('isHidden', false).size > 1) %}
        <li class=" Tree-depth-{{ depth }}" data-behaviour="collection" id="tree-{{ root.name }}-collection-{{ item.handle }}">
            <h4 class="Tree-collectionLabel" data-role="toggle">
                <span>{{ item.label }}</span>
            </h4>
            <ul class="Tree-collectionItems" data-role="items">
            {% if item.isComponent and not item.isCollated %}
            {% set items = item.variants().filter('isHidden', false).items() %}
            {% else %}
            {% set items = item.filter('isHidden', false).items() %}
            {% endif %}
            {{ leaves(items, root, current, (depth + 1), request) }}
            </ul>
        </li>
        {% else %}
        {% set isCurrent = true if (current and (current.id == item.id)) else false %}
        <li class="border-t border-grey-lightest relative {% if isCurrent %} is-current{% endif %}"{% if isCurrent %} data-state="current"{% endif %} data-role="item">
            <a class="block py-4 px-3 w-10/12 block " href="{{ path( (item | url), request) }}" data-pjax>
                <span>{{ item.label }}</span>
                {% if item.status %}{{ status.unlabelled(item.status) }}{% endif %}
            </a>
        </li>
        {% endif %}
    {% endfor %}
{% endmacro %}
